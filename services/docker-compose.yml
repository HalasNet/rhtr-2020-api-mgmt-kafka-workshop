version: '3'
services:
  zookeeper:
    container_name: iot-lab-zookeeper
    networks:
      - rhtr-lab
    image: strimzi/kafka:0.11.3-kafka-2.1.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
  kafka:
    container_name: iot-lab-kafka
    networks:
      - rhtr-lab
    image: strimzi/kafka:0.11.3-kafka-2.1.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  iot-psql:
    networks:
      - rhtr-lab
    container_name: iot-lab-psql
    build:
      context: postgresql/
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
  iot-sse-server:
    networks:
      - rhtr-lab
    container_name: iot-sse-server
    build:
      context: iot-sse-server/
      dockerfile: src/main/docker/Dockerfile.jvm
    ports:
      - "8083:8083"
    environment:
      - HTTP_PORT=8082
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
  iot-data-generator:
    networks:
      - rhtr-lab
    container_name: iot-lab-data-generator
    build:
      context: iot-data-generator/
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - HTTP_PORT=8082
      - PSQL_CONNECTION_STRING=psql://rhtr-user:rhtr-pass@iot-psql:5432/
  iot-graphql-api:
    depends_on:
      - iot-psql
    networks:
      - rhtr-lab
    container_name: iot-lab-graphql-api
    build:
      context: iot-graphql-api/
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - HTTP_PORT=8081
      - DB_CLIENT=pg
      - DB_USER=rhtr-user
      - DB_PASSWORD=rhtr-pass
      - DB_DATABASE=city-info
      - DB_HOST=iot-psql
      - DB_PORT=5432
  iot-sensor-management-ui:
    networks:
      - rhtr-lab
    container_name: iot-lab-sensor-management-ui
    build:
      context: sensor-management-ui/
      dockerfile: Dockerfile
      args:
        - IOT_GRAPHQL_HOST=http://localhost:8081/graphql
    ports:
      - "8080:8080"
networks:
  rhtr-lab:
    external: true
